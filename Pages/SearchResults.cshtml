@page
@model SearchResultsModel
@{
  ViewData["Title"] = "Results";
}
<div class="d-flex align-items-stretch flex-column-reverse flex-md-row search-results">
  @* CARDS SECTION *@
  <div class="card-grid">
    @{
      var carouselcount = 0;
    }
    @foreach (var item in Model.Property)
    {

      <a asp-area="" asp-page="./Properties/Details" asp-route-id="@item.Id">
        <div class="card mb-3">
          @{
            var count = 0;
          }
          <div id="carousel@(carouselcount)" class="carousel slide">
            <div class="carousel-inner">
              @foreach (var image in item.Images!)
              {

                if (count == 0)
                {
                  count++;
                  <div class="carousel-item active">
                    <img src="@image.ImageUrl" class="d-block w-100 card-img-top" alt="...">
                  </div>
                }
                else
                {
                  <div class="carousel-item">
                    <img src="@image.ImageUrl" class="d-block w-100 card-img-top" alt="...">
                  </div>
                }

              }
              <button class="carousel-control-prev" type="button" data-bs-target="#carousel@(carouselcount)"
              data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next" type="button" data-bs-target="#carousel@(carouselcount)"
              data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
              </button>
            </div>

            <div class="card-body">
              <div class="d-flex justify-content-between">
                <p class="card-title">@Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.State),
                  @Html.DisplayFor(modelItem => item.Country)</p>
                <p class="card-text listingcard"></p>
              </div>

              <p class="card-text text-muted">@Html.DisplayFor(modelItem => item.Title)</p>
              <p class="card-text text-muted">@Html.DisplayFor(modelItem => item.NumberOfBedrooms) Bedrooms</p>
              <p class="card-text">@Html.DisplayFor(modelItem => item.DailyRate) <small class="text-muted">per
                  night</small>
              </p>
            </div>

            @{
              carouselcount++;
            }

          </div>
        </div>
      </a>
      @* Card end *@

    }

  </div>
  @* END CARD SECTION *@

  @* MAP SECTION *@
  <div class="map-container">
    <div id="map" style='width: 100%; height: 100%;'></div>
  </div>

</div>

@section Scripts {
<script>
  // Set ratings
  const cards = document.querySelectorAll(".listingcard")

  cards.forEach(setRating);

  function setRating(card) {
    card.innerHTML = `<i class="bi bi-star-fill"></i> ${Math.floor(Math.random() * (6 - 3) + 3)}`;
  }

  // Map
  const apiKey = 'pk.eyJ1IjoiYWxpbmFnZWUiLCJhIjoiY2tjaG14MTlhMGh4ejJxbzB1dmxtbXhndSJ9.1n05xXhvacdhS-dWPWaH6Q';
  mapboxgl.accessToken = apiKey;

  fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${localStorage.getItem('searchlocation')}.json?access_token=${apiKey}`)
    .then(response => response.json())
    .then((data) => {
      //console.log(data)
      const coordinates = data.features[0].center;
      console.log(coordinates);
      // add callback to mapbox, giving it your coordinates
      showMap(coordinates);
    });

  const showMap = (coord) => {

    const map = new mapboxgl.Map({
      container: 'map',
      center: coord, // Coordinates of search location go here
      zoom: 10,
      style: 'mapbox://styles/mapbox/streets-v11'
    });


    map.addControl(new mapboxgl.NavigationControl());

    new mapboxgl.Marker()
      .setLngLat(coord)
      .addTo(map);
  }



</script>
}
